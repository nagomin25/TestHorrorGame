#include "InventorySlotWidget.h"
#include "Components/Image.h"
#include "Components/TextBlock.h"
#include "InventoryMeshWidget.h"
#include "Blueprint/UserWidget.h"

void UInventorySlotWidget::NativeConstruct()
{
	Super::NativeConstruct();
	
	// 3D„É°„ÉÉ„Ç∑„É•„Ç¶„Ç£„Ç∏„Çß„ÉÉ„Éà„ÅÆÁ¢∫Ë™ç
	if (ItemMeshWidget)
	{
		UE_LOG(LogTemp, Warning, TEXT("‚úÖ ItemMeshWidget found in blueprint"));
	}
	else
	{
		UE_LOG(LogTemp, Error, TEXT("‚ùå ItemMeshWidget is required but not found in blueprint!"));
	}
	
	// 2D„Ç¢„Ç§„Ç≥„É≥„ÅØ„Ç™„Éó„Ç∑„Éß„Éä„É´
	if (ItemIcon)
	{
		UE_LOG(LogTemp, Warning, TEXT("‚úÖ ItemIcon available as fallback"));
	}
	else
	{
		UE_LOG(LogTemp, Warning, TEXT("üí° ItemIcon not found - using 3D-only mode"));
	}
}

void UInventorySlotWidget::Setup(const FInventorySlot& SlotData)
{
    CurrentSlotData = SlotData;

    // „Éá„Éê„ÉÉ„Ç∞ÔºöÂèó„ÅëÂèñ„Å£„Åü„Éá„Éº„Çø„ÇíÁ¢∫Ë™ç
    UE_LOG(LogTemp, Warning, TEXT("üîç InventorySlotWidget::Setup called"));
    UE_LOG(LogTemp, Warning, TEXT("üìã ItemID: %s"), *SlotData.Item.ItemID.ToString());
    UE_LOG(LogTemp, Warning, TEXT("üìã Name: %s"), *SlotData.Item.Name.ToString());
    UE_LOG(LogTemp, Warning, TEXT("üìã Description: %s"), *SlotData.Item.Description.ToString());
    UE_LOG(LogTemp, Warning, TEXT("üìã Count: %d"), SlotData.Count);
    UE_LOG(LogTemp, Warning, TEXT("üìã Has Mesh: %s"), SlotData.Item.Mesh ? TEXT("Yes") : TEXT("No"));

    // „Ç¢„Ç§„ÉÜ„É†ÂÄãÊï∞„ÅÆË®≠ÂÆö
    if (ItemCountText)
    {
        ItemCountText->SetText(FText::AsNumber(SlotData.Count));
        ItemCountText->SetVisibility(ESlateVisibility::Visible); // Â∏∏„Å´Ë°®Á§∫
        UE_LOG(LogTemp, Warning, TEXT("‚úÖ ItemCountText set to: %d"), SlotData.Count);
    }
    else
    {
        UE_LOG(LogTemp, Error, TEXT("‚ùå ItemCountText is nullptr!"));
    }

    // „Ç¢„Ç§„ÉÜ„É†Ë°®Á§∫„ÅÆË®≠ÂÆöÔºà3D„É°„ÉÉ„Ç∑„É•„ÇíÂÑ™ÂÖàÔºâ
    if (SlotData.Item.Mesh && ItemMeshWidget)
    {
        // 3D„É°„ÉÉ„Ç∑„É•„ÇíË°®Á§∫
        UE_LOG(LogTemp, Warning, TEXT("üéØ Using 3D mesh display"));
        ItemMeshWidget->SetMesh(SlotData.Item.Mesh);
        ItemMeshWidget->SetVisibility(ESlateVisibility::Visible);
        
        // 2D„Ç¢„Ç§„Ç≥„É≥„ÅØÈùûË°®Á§∫ÔºàÂ≠òÂú®„Åô„ÇãÂ†¥ÂêàÔºâ
        if (ItemIcon)
        {
            ItemIcon->SetVisibility(ESlateVisibility::Hidden);
        }
    }
    else if (SlotData.Item.Icon && ItemIcon)
    {
        // „Éï„Ç©„Éº„É´„Éê„ÉÉ„ÇØÔºö2D„Ç¢„Ç§„Ç≥„É≥„ÇíË°®Á§∫
        UE_LOG(LogTemp, Warning, TEXT("üñºÔ∏è Fallback to 2D icon display"));
        ItemIcon->SetBrushFromTexture(SlotData.Item.Icon);
        ItemIcon->SetVisibility(ESlateVisibility::Visible);
        
        // 3D„Ç¶„Ç£„Ç∏„Çß„ÉÉ„Éà„ÅØÈùûË°®Á§∫
        if (ItemMeshWidget)
        {
            ItemMeshWidget->SetVisibility(ESlateVisibility::Hidden);
        }
    }
    else if (ItemMeshWidget)
    {
        // „É°„ÉÉ„Ç∑„É•„ÇÇ„Ç¢„Ç§„Ç≥„É≥„ÇÇ„Å™„ÅÑÂ†¥Âêà„ÅØ3D„Ç¶„Ç£„Ç∏„Çß„ÉÉ„Éà„ÇíÁ©∫„ÅßË°®Á§∫
        UE_LOG(LogTemp, Warning, TEXT("‚ö†Ô∏è No mesh or icon available, showing empty 3D widget"));
        ItemMeshWidget->SetVisibility(ESlateVisibility::Visible);
        
        if (ItemIcon)
        {
            ItemIcon->SetVisibility(ESlateVisibility::Hidden);
        }
    }
    else
    {
        UE_LOG(LogTemp, Error, TEXT("‚ùå No display widgets available!"));
    }

    // „Ç¢„Ç§„ÉÜ„É†Âêç„ÅÆË®≠ÂÆö
    if (ItemNameText)
    {
        if (!SlotData.Item.Name.IsEmpty())
        {
            ItemNameText->SetText(SlotData.Item.Name);
            ItemNameText->SetVisibility(ESlateVisibility::Visible);
            UE_LOG(LogTemp, Warning, TEXT("‚úÖ ItemNameText set to: %s"), *SlotData.Item.Name.ToString());
        }
        else
        {
            ItemNameText->SetText(FText::FromString(TEXT("Unknown Item")));
            ItemNameText->SetVisibility(ESlateVisibility::Visible);
            UE_LOG(LogTemp, Warning, TEXT("‚ö†Ô∏è ItemNameText set to default"));
        }
    }
    else
    {
        UE_LOG(LogTemp, Error, TEXT("‚ùå ItemNameText is nullptr!"));
    }

    // „Ç¢„Ç§„ÉÜ„É†Ë™¨Êòé„ÅÆË®≠ÂÆö
    if (ItemDescriptionText)
    {
        if (!SlotData.Item.Description.IsEmpty())
        {
            ItemDescriptionText->SetText(SlotData.Item.Description);
            ItemDescriptionText->SetVisibility(ESlateVisibility::Visible);
            UE_LOG(LogTemp, Warning, TEXT("‚úÖ ItemDescriptionText set to: %s"), *SlotData.Item.Description.ToString());
        }
        else
        {
            ItemDescriptionText->SetText(FText::FromString(TEXT("Ë™¨Êòé„Å™„Åó")));
            ItemDescriptionText->SetVisibility(ESlateVisibility::Visible);
            UE_LOG(LogTemp, Warning, TEXT("‚ö†Ô∏è ItemDescriptionText set to default"));
        }
    }
    else
    {
        UE_LOG(LogTemp, Error, TEXT("‚ùå ItemDescriptionText is nullptr!"));
    }
}
